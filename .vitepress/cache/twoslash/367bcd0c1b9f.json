{"code":"<script setup lang=\"ts\">\nimport {ref} from 'vue';\n\nconst message = ref('Hello world!');\n</script>","nodes":[{"type":"hover","text":"(alias) function ref<T>(value: T): [T] extends [Ref] ? IfAny<T, Ref<T>, T> : Ref<UnwrapRef<T>, UnwrapRef<T> | T> (+1 overload)\nimport ref","docs":"Takes an inner value and returns a reactive and mutable ref object, which\nhas a single property `.value` that points to the inner value.","tags":[["param","value - The object to wrap in the ref."],["see","{@link https://vuejs.org/api/reactivity-core.html#ref}"]],"start":33,"length":3,"target":"ref","line":1,"character":8},{"type":"hover","text":"const message: Ref<string, string>","start":57,"length":7,"target":"message","line":3,"character":6},{"type":"hover","text":"(alias) ref<string>(value: string): Ref<string, string> (+1 overload)\nimport ref","docs":"Takes an inner value and returns a reactive and mutable ref object, which\nhas a single property `.value` that points to the inner value.","tags":[["param","value - The object to wrap in the ref."],["see","{@link https://vuejs.org/api/reactivity-core.html#ref}"]],"start":67,"length":3,"target":"ref","line":3,"character":16}],"meta":{"extension":"vue","compilerOptions":{"strict":true,"module":99,"target":99,"allowJs":true,"skipDefaultLibCheck":true,"skipLibCheck":true,"moduleDetection":3,"baseUrl":"/Users/jayqing/Documents/blog-vitepress/","jsx":1,"jsxImportSource":"vue","noImplicitAny":false},"handbookOptions":{"errors":[],"noErrors":false,"noErrorsCutted":true,"noErrorValidation":false,"noStaticSemanticInfo":false,"showEmit":false,"keepNotations":true},"removals":[],"flagNotations":[],"virtualFiles":[{"offset":0,"filename":"index.tsx","filepath":"/Users/jayqing/Documents/blog-vitepress/index.tsx","content":"/// <reference types=\"./node_modules/.vue-global-types/vue_3.3_false.d.ts\" />\n\nimport {ref} from 'vue';\n\n\nconst { defineProps, defineSlots, defineEmits, defineExpose, defineModel, defineOptions, withDefaults, } = await import('vue');\nconst message = ref('Hello world!');\n;/* PartiallyEnd: #3632/scriptSetup.vue */\nconst __VLS_fnComponent = (await import('vue')).defineComponent({\n});\ntype __VLS_BuiltInPublicProps = import('vue').VNodeProps\n\t\t\t\t\t& import('vue').AllowedComponentProps\n\t\t\t\t\t& import('vue').ComponentCustomProps;;\nlet __VLS_functionalComponentProps!: __VLS_OmitKeepDiscriminatedUnion<InstanceType<typeof __VLS_fnComponent>['$props'], keyof __VLS_BuiltInPublicProps>;\ntype __VLS_PublicProps = {};\nfunction __VLS_template() {\nconst __VLS_ctx = {} as InstanceType<__VLS_PickNotAny<typeof __VLS_self, new () => {}>>;\nconst __VLS_localComponents = {\n...{} as {\n\t\t\t[K in 'index']: typeof __VLS_self\n\t\t\t\t& (new () => {\n\t\t\t\t\t$slots: typeof __VLS_slots\n\t\t\t\t})\n\t\t},\n...{} as NonNullable<typeof __VLS_self extends { components: infer C } ? C : {}>,\n...__VLS_ctx,\n};\nlet __VLS_components!: typeof __VLS_localComponents & __VLS_GlobalComponents;\nconst __VLS_localDirectives = {\n...{} as NonNullable<typeof __VLS_self extends { directives: infer D } ? D : {}>,\n...__VLS_ctx,\n};\nlet __VLS_directives!: typeof __VLS_localDirectives & __VLS_GlobalDirectives;\nlet __VLS_styleScopedClasses!: {};\n\n// no template\nconst __VLS_slots = {};\nconst __VLS_inheritedAttrs = {};\nconst $refs = {};\nconst $el = {} as any;\nreturn {\n\tattrs: {} as Partial<typeof __VLS_inheritedAttrs>,\n\tslots: __VLS_slots,\n\trefs: $refs,\n\trootEl: $el,\n};\n};\nconst __VLS_self = (await import('vue')).defineComponent({\nsetup() {\nreturn {\n};\n},\n});\ntype __VLS_TemplateResult = ReturnType<typeof __VLS_template>;\nexport default (await import('vue')).defineComponent({\nsetup() {\nreturn {\n};\n},\n});\n;/* PartiallyEnd: #4569/main.vue */\ntype __VLS_OmitKeepDiscriminatedUnion<T, K extends keyof any> = T extends any\n\t? Pick<T, Exclude<keyof T, K>>\n\t: never;\n","extension":"tsx","supportLsp":true}],"positionQueries":[],"positionCompletions":[],"positionHighlights":[]},"queries":[],"completions":[],"errors":[],"highlights":[],"hovers":[{"type":"hover","text":"(alias) function ref<T>(value: T): [T] extends [Ref] ? IfAny<T, Ref<T>, T> : Ref<UnwrapRef<T>, UnwrapRef<T> | T> (+1 overload)\nimport ref","docs":"Takes an inner value and returns a reactive and mutable ref object, which\nhas a single property `.value` that points to the inner value.","tags":[["param","value - The object to wrap in the ref."],["see","{@link https://vuejs.org/api/reactivity-core.html#ref}"]],"start":33,"length":3,"target":"ref","line":1,"character":8},{"type":"hover","text":"const message: Ref<string, string>","start":57,"length":7,"target":"message","line":3,"character":6},{"type":"hover","text":"(alias) ref<string>(value: string): Ref<string, string> (+1 overload)\nimport ref","docs":"Takes an inner value and returns a reactive and mutable ref object, which\nhas a single property `.value` that points to the inner value.","tags":[["param","value - The object to wrap in the ref."],["see","{@link https://vuejs.org/api/reactivity-core.html#ref}"]],"start":67,"length":3,"target":"ref","line":3,"character":16}],"tags":[]}