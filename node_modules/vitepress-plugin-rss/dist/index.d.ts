import { FeedOptions, Author } from 'feed';
import { SiteConfig } from 'vitepress';

type RSSOptions = Omit<FeedOptions, 'id'> & {
    id?: string;
    /**
     * 过滤目标文章
     * @param post 文章相关信息
     */
    filter?: (value: PostInfo, index: number, array: PostInfo[]) => boolean;
    /**
     * 你的站点地址
     * @example 'https://sugarat.top'
     */
    baseUrl: string;
    /**
     * 线上访问的RSS地址
     * @default
     * ```ts
     * `${baseUrl + VPConfig.site.base + (filename || 'feed.rss'}`
     * ```
     */
    url?: string;
    /**
     * 输出的RSS文件名
     * @default 'feed.rss'
     */
    filename?: string;
    /**
     * RSS的图标展示（你也可以传入一个svg字符串进行自定义，SVG 图标可访问 https://www.xicons.org/# 获取）
     * @default true
     */
    icon?: boolean | string;
    /**
     * 是否打印过程提示
     * @default true
     */
    log?: boolean;
    /**
     * 是否过滤 layout:home
     * @default true
     */
    ignoreHome?: boolean;
    /**
     * 博客站点内容涉及的作者列表
     */
    authors?: Author[];
    /**
     * 自定义文章摘要生成逻辑
     */
    renderExpect?: (fileContent: string, frontmatter: Record<string, any>) => string | Promise<string>;
    /**
     * 限制输出文件包含的文章数量
     * @default 0
     * @description (0 不限制；> 1 会按照日期排序对输出内容进行调整)
     */
    limit?: number;
    ariaLabel?: string;
};
interface PostInfo {
    filepath: string;
    fileContent: string;
    html: string;
    description: string;
    date: string;
    title: string;
    url: string;
    frontmatter: {
        [key: string]: any;
    };
}

declare function genFeed(config: SiteConfig, rssOptions: RSSOptions): Promise<void>;

declare function formatDate(d: any, fmt?: string): string;
declare const isWindows: boolean;
declare function slash(p: string): string;
declare function normalizePath(id: string): string;
declare function getDefaultTitle(content: string): string;
declare function clearMatterContent(content: string): string;
declare function getFileBirthTime(url: string): string;
declare function getTextSummary(text: string, count?: number): string | undefined;
declare const EXTERNAL_URL_RE: RegExp;
/**
 * Join two paths by resolving the slash collision.
 */
declare function joinPath(base: string, path: string): string;
declare function withBase(base: string, path: string): string;

declare function RssPlugin(rssOptions: RSSOptions): any;

export { EXTERNAL_URL_RE, PostInfo, RSSOptions, RssPlugin, clearMatterContent, formatDate, genFeed, getDefaultTitle, getFileBirthTime, getTextSummary, isWindows, joinPath, normalizePath, slash, withBase };
